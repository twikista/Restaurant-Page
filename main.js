(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),o=n.n(a),c=n(645),r=n.n(c)()(o());r.push([e.id,"h1{\n    color: blue;\n}\n\nh2{\n    color: plum;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf",sourcesContent:["h1{\n    color: blue;\n}\n\nh2{\n    color: plum;\n}"],sourceRoot:""}]);const s=r},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,o,c){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(r[i]=!0)}for(var u=0;u<e.length;u++){var d=[].concat(e[u]);a&&r[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),c="/*# ".concat(o," */"),r=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(r).concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var c={},r=[],s=0;s<e.length;s++){var i=e[s],u=a.base?i[0]+a.base:i[0],d=c[u]||0,l="".concat(u," ").concat(d);c[u]=d+1;var p=n(l),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var f=o(m,a);a.byIndex=s,t.splice(s,0,{identifier:l,updater:f,references:1})}r.push(l)}return r}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var c=a(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<c.length;r++){var s=n(c[r]);t[s].references--}for(var i=a(e,o),u=0;u<c.length;u++){var d=n(c[u]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}c=i}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},973:(e,t,n)=>{e.exports=n.p+"f79f01f881a5b54d3fbb.png"}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var c=t[a]={id:a,exports:{}};return e[a](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e=n(379),t=n.n(e),a=n(795),o=n.n(a),c=n(569),r=n.n(c),s=n(565),i=n.n(s),u=n(216),d=n.n(u),l=n(589),p=n.n(l),m=n(426),f={};f.styleTagTransform=p(),f.setAttributes=i(),f.insert=r().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;var v=n(973);function h(e,t,n){const a=new DocumentFragment,o=document.createElement("div");o.classList.add("food-menu");const c=new Image;c.classList.add("food-image"),c.src=t;const r=document.createElement("div");o.classList.add("menu-detail");const s=document.createElement("h3");s.textContent=e;const i=document.createElement("p");return i.textContent=n,r.append(s,i),a.append(c,r),o.append(a),o}function g(e,t,n){const a=document.createElement("div"),o=document.createElement("i");o.classList.add("fas",`${n}`);const c=document.createElement("h4");c.textContent=e;const r=document.createElement("p");return r.textContent=t,c.append(o),a.append(c,r),a}function E(e){const t=document.createElement("label");return t.textContent=e,t.htmlFor=`${e}`,t}function b(e,t){const n=document.createElement("input");return n.type=`${e}`,n.id=`${t}`,n.classList.add(`${t}`),n}const y=function(){const e=document.createElement("main");return e.append(function(){const e=document.createElement("section"),t=document.createElement("div");t.classList.add("section-content");const n=document.createElement("h2");n.textContent="tasty meals for every moment",n.classList.add("section-heading");const a=document.createElement("p");a.textContent="For over two decades, Havilah has served delicious healthy meals to over 20,000 uniqiue customers from across the globe. Our rich menu and superior cusotmer service has receives several industry awards as the best place to eat. ",a.classList.add("section-text");const o=document.createElement("a");o.href="#menu-section",o.textContent="explore our menu",t.append(n,a,o);const c=new DocumentFragment;return c.append(t),e.append(c),e}(),function(){const e=document.createElement("section");return e.classList.add("menu-section"),e.append(h("Rice and Stew",v,"1,200NGN"),h("Egusi Soup and Eba",v,"1,400NGN"),h("Jollof Rice and Chicken",v,"2,000NGN"),h("Bean ckae and Pap",v,"1,000NGN")),e}(),function(){const e=document.createElement("section");return e.classList.add("contact-section"),e.append(function(){const e=document.createElement("div"),t=new DocumentFragment;e.classList.add("contact-details");const n=document.createElement("h3");return n.textContent="Contact Details",t.append(n,g("Office Address","suite 25, Green Estate,\n      Lagos, Nigeria ","fa-map-marker-alt"),g("Phone Number","+2349036610000","fa-phone-square-alt"),g("Email","info@havilah.ng","fa-envelope"),g("Website","www.havilah.ng","fa-tv")),e.append(t),e}(),function(){const e=document.createElement("div"),t=new DocumentFragment;e.classList.add("get-intouch");const n=document.createElement("form");n.classList.add("contact-form"),n.append(E("Full Name"),b("text","name"),E("email"),b("email","email"),E("message"));const a=document.createElement("textarea");return a.id="message",a.maxLength=200,a.cols=40,a.rows=10,n.append(a),t.append(n),e.append(t),e}()),e}()),e};document.body.appendChild(function(){const e=document.createElement("div");return e.append(function(){const e=document.createElement("header");return e.append(function(){const e=document.createElement("nav");e.classList.add("nav-bar");const t=document.createElement("h2");t.textContent="Havilah.";const n=document.createElement("ul");n.classList.add("nav-menu");const a=new DocumentFragment;["home","menu","contact"].forEach((e=>{const t=document.createElement("li");t.classList.add("list-item");const n=document.createElement("button");n.classList.add("nav-btn",`${e}-btn`),n.textContent=e,t.append(n),a.append(t)})),n.append(a);const o=document.createElement("button");return o.classList.add("toggle-btn"),o.textContent="menu",e.append(t,n,o),n.addEventListener("click",(e=>{const t=e.target;"BUTTON"!==t.tagName||t.classList.contains("active")||function(e){document.querySelectorAll(".nav-btn").forEach((t=>{t===e?t.classList.add("active"):t.classList.remove("active")}))}(t)})),e}()),e}(),y()),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,